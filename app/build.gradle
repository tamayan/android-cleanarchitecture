apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// Dagger Hilt
apply plugin: 'dagger.hilt.android.plugin'
// AndroidX Navigation safeargs
apply plugin: "androidx.navigation.safeargs.kotlin"

def getLocalProperties(String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty(key)
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.example.cleanarchitecture"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Room Database Name
        buildConfigField "String", "ROOM_DATABASE_NAME", "\"AppDatabase.db\""
        buildConfigField "String", "YOUTUBE_IMAGE_URL", "\"http://img.youtube.com/vi/\""
        buildConfigField "String", "YOUTUBE_THUMBNAIL_NAME", "\"maxresdefault.jpg\""
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "BASE_URL", "\"${getLocalProperties('release_base_url')}\""
            buildConfigField "String", "BASIC_USER_NAME", "\"${getLocalProperties('release_user_name')}\""
            buildConfigField "String", "BASIC_PASS", "\"${getLocalProperties('release_password')}\""
        }

        debug {
            debuggable true
            initWith debug

            buildConfigField "String", "BASE_URL", "\"${getLocalProperties('debug_base_url')}\""
            buildConfigField "String", "BASIC_USER_NAME", "\"${getLocalProperties('debug_user_name')}\""
            buildConfigField "String", "BASIC_PASS", "\"${getLocalProperties('debug_password')}\""
        }

        local {
            debuggable true
            initWith debug

            buildConfigField "String", "BASE_URL", "\"${getLocalProperties('local_base_url')}\""
            buildConfigField "String", "BASIC_USER_NAME", "\"${getLocalProperties('local_user_name')}\""
            buildConfigField "String", "BASIC_PASS", "\"${getLocalProperties('local_password')}\""
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX
    implementation 'androidx.core:core-ktx:1.3.1'

    // AndroidX - Layout
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // AndroidX - Navigation
    def nav_version = "2.3.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // AndroidX - Lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // AndroidX - Room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // AndroidX - Paging
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime:$paging_version"
    testImplementation "androidx.paging:paging-common:$paging_version"

    // AndroidX - Hilt
    def hilt_version = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-common:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_version"

    // Dagger Hilt Support
    def dagger_hilt_version = "2.28-alpha"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Moshi
    def moshi_version = "1.9.3"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Material
    implementation 'com.google.android.material:material:1.2.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    // Hyperion
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-core:0.9.29'

    // Test Library
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'junit:junit:4.13'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'

    // AndroidX - Test Library
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

kapt {
    generateStubs = true
}

repositories {
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}